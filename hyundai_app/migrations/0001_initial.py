# Generated by Django 3.1.4 on 2021-02-01 11:53

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinalTrainDf',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('marka', models.BigIntegerField(blank=True, null=True)),
                ('model', models.BigIntegerField(blank=True, null=True)),
                ('year', models.BigIntegerField(blank=True, null=True)),
                ('engine', models.FloatField(blank=True, null=True)),
                ('gearbox', models.BigIntegerField(blank=True, null=True)),
                ('transmission', models.BigIntegerField(blank=True, null=True)),
                ('ban_type', models.BigIntegerField(blank=True, null=True)),
                ('fuel_type', models.BigIntegerField(blank=True, null=True)),
                ('color', models.BigIntegerField(blank=True, null=True)),
                ('used_by_km', models.BigIntegerField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'final_train_df',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Prediction1',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('marka', models.IntegerField(choices=[(1, 'Hyundai')], null=True)),
                ('model', models.IntegerField(choices=[(38, 'Accent')], null=True)),
                ('year', models.IntegerField(choices=[(1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021)], null=True)),
                ('engine', models.FloatField(choices=[(0.5, 0.5), (0.6, 0.6), (0.7, 0.7), (0.8, 0.8), (0.9, 0.9), (1.0, 1.0), (1.1, 1.1), (1.2, 1.2), (1.3, 1.3), (1.4, 1.4), (1.5, 1.5), (1.6, 1.6), (1.7, 1.7), (1.8, 1.8), (1.9, 1.9), (2.0, 2.0), (2.1, 2.1), (2.2, 2.2), (2.3, 2.3), (2.4, 2.4), (2.5, 2.5), (2.6, 2.6), (2.7, 2.7), (2.8, 2.8), (2.9, 2.9), (3.0, 3.0), (3.1, 3.1), (3.2, 3.2), (3.3, 3.3), (3.4, 3.4), (3.5, 3.5), (3.6, 3.6), (3.7, 3.7), (3.8, 3.8), (3.9, 3.9), (4.0, 4.0), (4.1, 4.1), (4.2, 4.2), (4.3, 4.3), (4.4, 4.4), (4.5, 4.5), (4.6, 4.6), (4.7, 4.7), (4.8, 4.8), (4.9, 4.9), (5.0, 5.0), (5.1, 5.1), (5.2, 5.2), (5.3, 5.3), (5.4, 5.4), (5.5, 5.5), (5.6, 5.6), (5.7, 5.7), (5.8, 5.8), (5.9, 5.9), (6.0, 6.0)], null=True)),
                ('gearbox', models.IntegerField(choices=[(1, 'AVTOMAT'), (2, 'MEXANIKI'), (3, 'VARIATOR'), (4, 'ROBOTLAŞDIRILMIŞ')], null=True)),
                ('transmission', models.IntegerField(choices=[(1, 'ÖN'), (2, 'TAM'), (3, 'ARXA')], null=True)),
                ('ban_type', models.IntegerField(choices=[(1, 'SEDAN'), (2, 'OFFROADER / SUV'), (3, 'UNIVERSAL'), (4, 'HETÇBEK / LIFTBEK'), (5, 'VAN'), (6, 'KUPE'), (7, 'FURQON'), (8, 'MINIVAN'), (9, 'KABRIO'), (10, 'MIKROAVTOBUS'), (11, 'PIKAP'), (12, 'YÜK MAŞINI'), (13, 'AVTOBUS'), (14, 'MOTOSIKLET'), (15, 'DARTQI'), (16, 'RODSTER'), (17, 'QOLFKAR')], null=True)),
                ('fuel_type', models.IntegerField(choices=[(1, 'BENZIN'), (2, 'DIZEL'), (3, 'HIBRID'), (4, 'ELEKTRO'), (5, 'QAZ')], null=True)),
                ('color', models.IntegerField(choices=[(1, 'YAŞ ASFALT'), (2, 'AĞ'), (3, 'BOZ'), (4, 'GÖY'), (5, 'QARA'), (6, 'SARI'), (7, 'GÜMÜŞÜ'), (8, 'QƏHVƏYI'), (9, 'MAVI'), (10, 'YAŞIL'), (11, 'TÜND QIRMIZI'), (12, 'QIZILI'), (13, 'BEJ'), (14, 'QIRMIZI'), (15, 'NARINCI'), (16, 'BƏNÖVŞƏYI'), (17, 'ÇƏHRAYI')], null=True)),
                ('used_by_km', models.IntegerField(default=0)),
                ('predicted_price', models.IntegerField(default=0)),
                ('date', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
